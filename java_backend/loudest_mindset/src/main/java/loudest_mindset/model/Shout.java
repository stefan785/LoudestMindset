/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package loudest_mindset.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
//import java.time.LocalDateTime;
import java.time.OffsetDateTime;

/**
 * Shout
 */
@Entity
public class Shout {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @JsonProperty("id")
    private Long id = null;

    @JsonProperty("userId")
    private Long userId = null;

    @JsonProperty("text")
    private String text = null;

    @JsonProperty("timestamp")
    private OffsetDateTime timestamp = null;

    public Shout id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * auto generated by ORM or DBMS
     *
     * @return id
   *
     */
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Shout userId(Long userId) {
        this.userId = userId;
        return this;
    }

    /**
     * id of the creator
     *
     * @return userId
   *
     */
    public Long getUserId() {
        return userId;
    }

    public void setUserId(Long userId) {
        this.userId = userId;
    }

    public Shout text(String text) {
        this.text = text;
        return this;
    }

    /**
     * content of the shout
     *
     * @return text
   *
     */
    public String getText() {
        return text;
    }

    public void setText(String text) {
        this.text = text;
    }

    public Shout timestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }

    /**
     * timestamp in ISO 8601 format
     *
     * @return timestamp
   *
     */
    public OffsetDateTime getTimestamp() {
        return timestamp;
    }

    public void setTimestamp() {
        this.timestamp = OffsetDateTime.now();
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Shout shout = (Shout) o;
        return Objects.equals(this.id, shout.id)
                && Objects.equals(this.userId, shout.userId)
                && Objects.equals(this.text, shout.text)
                && Objects.equals(this.timestamp, shout.timestamp);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, userId, text, timestamp);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Shout {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
        sb.append("    text: ").append(toIndentedString(text)).append("\n");
        sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
